[package]
name = "critical-section"
version = "1.1.1"
edition = "2018"
description = "Cross-platform critical section"
repository = "https://github.com/rust-embedded/critical-section"
readme = "README.md"
license = "MIT OR Apache-2.0"
categories = [
    "embedded",
    "no-std",
    "concurrency",
]

[features]

# Enable a critical-section implementation for platforms supporting `std`, based on `std::sync::Mutex`.
# If you enable this, the `critical-section` crate itself provides the implementation,
# you don't have to get another crate to to do it.
std = ["restore-state-bool"]

# Set the RestoreState size.
# The crate supplying the critical section implementation can set ONE of them.
# Other crates MUST NOT set any of these.
restore-state-none = []  # Default
restore-state-bool = []
restore-state-u8 = []
restore-state-u16 = []
restore-state-u32 = []
restore-state-u64 = []
