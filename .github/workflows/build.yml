name: Build CI

on: [push, pull_request]

jobs:
  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust-toolchain: [nightly, nightly-2024-05-02]
    env:
      RUSTUP_TOOLCHAIN: ${{ matrix.rust-toolchain }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, clippy, rustfmt
        targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat
    - name: Check rust version
      run: rustc --version --verbose
    - name: Clippy for the default target
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make clippy
    - name: Clippy for x86_64
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make clippy ARCH=x86_64
    - name: Clippy for riscv64
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make clippy ARCH=riscv64
    - name: Clippy for aarch64
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make clippy ARCH=aarch64
    - name: Check code format
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: cargo fmt --all -- --check

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64, riscv64, aarch64]
        rust-toolchain: [nightly, nightly-2024-05-02]
    env:
      RUSTUP_TOOLCHAIN: ${{ matrix.rust-toolchain }}
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust-toolchain }}
        components: rust-src, llvm-tools
        targets: x86_64-unknown-none, riscv64gc-unknown-none-elf, aarch64-unknown-none, aarch64-unknown-none-softfloat
    - uses: Swatinem/rust-cache@v2
    - run: cargo install cargo-binutils
    - name: Build helloworld
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} A=examples/helloworld
    - name: Build httpclient
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} A=examples/httpclient
    - name: Build httpserver
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} A=examples/httpserver
    - name: Build shell
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} A=examples/shell

    - uses: ./.github/workflows/actions/setup-musl
      with:
        arch: ${{ matrix.arch }}
    - name: Build helloworld-c
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} A=examples/helloworld-c
    - name: Build httpclient-c
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} A=examples/httpclient-c
    - name: Build httpserver-c
      continue-on-error: ${{ matrix.rust-toolchain == 'nightly' }}
      run: make ARCH=${{ matrix.arch }} A=examples/httpserver-c

