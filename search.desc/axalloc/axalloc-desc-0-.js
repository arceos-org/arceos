searchState.loadedDescShard("axalloc", 0, "ArceOS global memory allocator.\nThe default byte allocator.\nThe global allocator used by ArceOS.\nA RAII wrapper of contiguous 4K-sized pages.\nAdd the given region to the allocator.\nAllocate arbitrary number of bytes. Returns the left bound …\nAllocate one 4K-sized page.\nAllocate contiguous 4K-sized pages.\nAllocates contiguous pages.\nAllocates contiguous pages starting from the given address.\nAllocate one 4K-sized page and fill with zero.\nConvert to a mutable raw pointer.\nConvert to a raw pointer.\nForms a slice that can read data.\nForms a mutable slice that can write data.\nReturns the number of available bytes in the byte …\nReturns the number of available pages in the page …\nGives back the allocated region to the byte allocator.\nGives back the allocated pages starts from <code>pos</code> to the page …\nFill <code>self</code> with <code>byte</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdd the given memory region to the global allocator.\nReturns the reference to the global allocator.\nInitializes the global allocator with the given memory …\nInitializes the allocator with the given region.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the name of the allocator.\nCreates an empty <code>GlobalAllocator</code>.\nGet the total size (in bytes) of these page(s).\nGet the start physical address of this page.\nGet the start virtual address of this page.\nReturns the number of allocated bytes in the byte …\nReturns the number of allocated pages in the page …\nFill <code>self</code> with zero.")