searchState.loadedDescShard("axtask", 0, "ArceOS task management module.\nThe wrapper type for <code>cpumask::CpuMask</code> with SMP …\nThe reference type of a task.\nA wrapper of <code>AxTaskRef</code> as the current task.\nA trait to convert <code>TaskInner::task_ext_ptr</code> to the mutable …\nA trait to convert <code>TaskInner::task_ext_ptr</code> to the …\nA unique identifier for a thread.\nThe inner task structure.\nA queue to store sleeping tasks.\nConverts <code>CurrentTask</code> to <code>AxTaskRef</code>.\nConvert the task ID to a <code>u64</code>.\nReturns the CPU ID where the task is running or will run.\nGets the cpu affinity mask of the task.\nReturns a mutable reference to the task context.\nGets the current task.\nGets the current task, or returns <code>None</code> if the current task …\nDefine the task extended data.\nExits the current task.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the ID of the task.\nGet a combined string of the task ID and name.\nInitializes the task scheduler (for the primary CPU).\nInitializes the task scheduler for secondary CPUs.\nInitialize the user-defined task extended data.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the wait queue is empty.\nWait for the task to exit, and return the exit code.\nReturns the top address of the kernel stack.\nReturns the number of tasks in the wait queue.\nGets the name of the task.\nCreate a new task with the given entry function and stack …\nCreates an empty wait queue.\nWakes all tasks in the wait queue.\nWakes up one task in the wait queue, usually the first one.\nWake up the given task in the wait queue.\nHandles periodic timer ticks for the task manager.\nTransfers up to <code>count</code> tasks from this wait queue to …\nThe idle task routine.\nSets the cpu affinity mask of the task.\nSet the affinity for the current task. <code>AxCpuMask</code> is used …\nSet the priority for current task.\nCurrent task is going to sleep for the given duration.\nCurrent task is going to sleep for the given duration.\nCurrent task is going to sleep, it will be woken up at the …\nCurrent task is going to sleep, it will be woken up at the …\nSpawns a new task with the default parameters.\nSpawns a new task with the given parameters.\nAdds the given task to the run queue, returns the task …\nGet a reference to the task extended data.\nGet a mutable reference to the task extended data.\nReturns the pointer to the user-defined task extended data.\nBlocks the current task and put it into the wait queue, …\nBlocks the current task and put it into the wait queue, …\nBlocks the current task and put it into the wait queue, …\nBlocks the current task and put it into the wait queue, …\nCreates an empty wait queue with space for at least …\nCurrent task gives up the CPU time voluntarily, and …\nCurrent task gives up the CPU time voluntarily, and …")