(function() {
    var type_impls = Object.fromEntries([["arceos_api",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Clone-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; VfsNodeType</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","arceos_api::fs::AxFileType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Debug-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","arceos_api::fs::AxFileType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-PartialEq-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;VfsNodeType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","arceos_api::fs::AxFileType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VfsNodeType\" class=\"impl\"><a href=\"#impl-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_file\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_file</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this node type represents a regular file.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dir\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_dir</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this node type represents a directory.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_symlink\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_symlink</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this node type represents a symbolic link.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_block_device\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_block_device</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a block device.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_char_device\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_char_device</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a char device.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_fifo\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_fifo</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a fifo.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_socket\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_socket</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a socket.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_char\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_char</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class=\"docblock\"><p>Returns a character representation of the node type.</p>\n<p>For example, <code>d</code> for directory, <code>-</code> for regular file, etc.</p>\n</div></details></div></details>",0,"arceos_api::fs::AxFileType"],["<section id=\"impl-Copy-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Copy-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for VfsNodeType</h3></section>","Copy","arceos_api::fs::AxFileType"],["<section id=\"impl-Eq-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Eq-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for VfsNodeType</h3></section>","Eq","arceos_api::fs::AxFileType"],["<section id=\"impl-StructuralPartialEq-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for VfsNodeType</h3></section>","StructuralPartialEq","arceos_api::fs::AxFileType"]]],["axfs",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Clone-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; VfsNodeType</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","axfs::fops::FileType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Debug-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","axfs::fops::FileType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-PartialEq-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;VfsNodeType) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","axfs::fops::FileType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-VfsNodeType\" class=\"impl\"><a href=\"#impl-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl VfsNodeType</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_file\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_file</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this node type represents a regular file.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dir\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_dir</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this node type represents a directory.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_symlink\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_symlink</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Tests whether this node type represents a symbolic link.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_block_device\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_block_device</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a block device.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_char_device\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_char_device</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a char device.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_fifo\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_fifo</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a fifo.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_socket\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">is_socket</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if this node type is a socket.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_char\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">as_char</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\">char</a></h4></section></summary><div class=\"docblock\"><p>Returns a character representation of the node type.</p>\n<p>For example, <code>d</code> for directory, <code>-</code> for regular file, etc.</p>\n</div></details></div></details>",0,"axfs::fops::FileType"],["<section id=\"impl-Copy-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Copy-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for VfsNodeType</h3></section>","Copy","axfs::fops::FileType"],["<section id=\"impl-Eq-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-Eq-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for VfsNodeType</h3></section>","Eq","axfs::fops::FileType"],["<section id=\"impl-StructuralPartialEq-for-VfsNodeType\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-VfsNodeType\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for VfsNodeType</h3></section>","StructuralPartialEq","axfs::fops::FileType"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10174,10127]}